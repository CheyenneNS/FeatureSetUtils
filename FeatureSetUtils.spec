/*
A KBase module: FeatureSetUtils
*/

module FeatureSetUtils {
    /* A boolean - 0 for false, 1 for true.
        @range (0, 1)
    */
    typedef int boolean;

    /* An X/Y/Z style reference
    */
    typedef string obj_ref;

    /*
      required params:
      diff_expression_ref: DifferetialExpressionMatrixSet object reference
      expression_matrix_ref: ExpressionMatrix object reference
      p_cutoff: p value cutoff
      q_cutoff: q value cutoff
      fold_scale_type: one of ["linear", "log2+1", "log10+1"]
      fold_change_cutoff: fold change cutoff
      workspace_name: the name of the workspace it gets saved to
    */
    typedef structure{
        obj_ref diff_expression_ref;
        obj_ref expression_matrix_ref;
        float p_cutoff;
        float q_cutoff;
        string fold_scale_type;
        float fold_change_cutoff;
        string workspace_name;
    } UploadFeatureSetFromDiffExprInput;

    /*
      result_directory: folder path that holds all files generated by upload_featureset_from_diff_expr
      up_feature_set_ref: generated upper FeatureSet object reference
      down_feature_set_ref: generated down FeatureSet object reference
      filtered_expression_matrix_ref: generated filtered ExpressionMatrix object reference
      report_name: report name generated by KBaseReport
      report_ref: report reference generated by KBaseReport
    */
    typedef structure{
        string result_directory;
        obj_ref up_feature_set_ref;
        obj_ref down_feature_set_ref;
        obj_ref filtered_expression_matrix_ref;
        string report_name;
        string report_ref;
    }UploadFeatureSetFromDiffExprResult;

    /*  
        upload_featureset_from_diff_expr: create a FeatureSet object from a RNASeqDifferentialExpression object
    */
    funcdef upload_featureset_from_diff_expr(UploadFeatureSetFromDiffExprInput params)
        returns (UploadFeatureSetFromDiffExprResult returnVal) authentication required;

    /*
      required params:
      expression_matrix_ref: ExpressionMatrix object reference
      output_suffix: output average ExpressionMatrix name suffix
      workspace_name: the name of the workspace it gets saved to
    */
    typedef structure{
        obj_ref expression_matrix_ref;
        string output_suffix;
        string workspace_name;
    } CalAveExpressionMatrixInput;

    /*
      average_expression_matrix_ref: generated average ExpressionMatrix object reference
      report_name: report name generated by KBaseReport
      report_ref: report reference generated by KBaseReport
    */
    typedef structure{
        obj_ref average_expression_matrix_ref;
        string report_name;
        string report_ref;
    }CalAveExpressionMatrixResult;

    /*  
        calculate_average_expression_matrix: create an average ExpressionMatrix object from a ExpressionMatrix object
    */
    funcdef calculate_average_expression_matrix(CalAveExpressionMatrixInput params)
        returns (CalAveExpressionMatrixResult returnVal) authentication required;
};
